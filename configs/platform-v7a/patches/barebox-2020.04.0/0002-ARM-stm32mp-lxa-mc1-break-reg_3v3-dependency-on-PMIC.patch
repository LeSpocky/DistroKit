From: Ahmad Fatoum <a.fatoum@pengutronix.de>
Date: Thu, 13 Feb 2020 11:10:44 +0100
Subject: [PATCH] ARM: stm32mp: lxa-mc1: break reg_3v3 dependency on PMIC

While the regulator is indeed powered by the PMIC, basically the whole
system is, and it's always on. Linux doesn't handle this specially
however and will defer SDMMC probe till after the PMIC is probed costing
us some valuable boot time. Fix this up.

Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
---
 arch/arm/boards/lxa-mc1/board.c | 29 ++++++++++++++++++++++++++++-
 1 file changed, 28 insertions(+), 1 deletion(-)

diff --git a/arch/arm/boards/lxa-mc1/board.c b/arch/arm/boards/lxa-mc1/board.c
index d36924fc2793..7f1f3ccd7e06 100644
--- a/arch/arm/boards/lxa-mc1/board.c
+++ b/arch/arm/boards/lxa-mc1/board.c
@@ -5,6 +5,28 @@
 #include <asm/memory.h>
 #include <mach/bbu.h>
 #include <bootsource.h>
+#include <of.h>
+
+static int of_fixup_regulator_supply_disable(struct device_node *root, void *path)
+{
+	struct device_node *node;
+	struct property *prop;
+
+	node = of_find_node_by_path_from(root, path);
+	if (!node) {
+		pr_warn("fixup for %s failed: not found\n", (const char *)path);
+		return -ENOENT;
+	}
+
+	if (!of_property_read_bool(node, "regulator-always-on"))
+		return 0;
+
+	prop = of_find_property(node, "vin-supply", NULL);
+	if (prop)
+		of_delete_property(prop);
+
+	return 0;
+}
 
 static int mc1_device_init(void)
 {
@@ -26,6 +48,11 @@ static int mc1_device_init(void)
 
 	barebox_set_hostname("lxa-mc1");
 
-	return 0;
+	/* The regulator is powered by the PMIC, but is always on as far as
+	 * software is concerned. Break the reference to the PMIC, so the OS
+	 * doesn't need to defer SDMMC/Ethernet peripherals till after the PMIC
+	 * is up.
+	 */
+	return of_register_fixup(of_fixup_regulator_supply_disable, "/regulator_3v3");
 }
 device_initcall(mc1_device_init);
